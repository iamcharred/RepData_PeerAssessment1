ls
clear
clr
?clear
?read.csv
data.act <- read.csv("activity.csv", header = TRUE, sep =",", quote = "\"", na.strings = "NA")
View(data.act)
View(data.act)
View(data.act)
dates <- data.act$date
dates <- as.Date(as.character(dates), "%Y%m%d")
hist(dates, day)
hist(dates, "day")
hist(dates, "date")
str(dates)
dates <- as.Date(as.character(dates), "%Y-%m-%d")
head(dates)
dates <- as.Date(as.character(dates), "%YY-%mm-%dd")
head(dates)
dates <- data.act$date
head(dates)
dates <- as.Date(as.character(dates), "%YY-%mm-%dd")
head(dates)
dates <- data.act$date
dates <- as.Date(as.character(dates), "%YYYY-%mm-%dd")
dates <- data.act$date
dates <- as.Date(as.character(dates), "%YYYY-%mm-%dd")
head(dates)
dates <- data.act$date
?as.Date
dates <- data.act$date
dates <- as.Date(as.character(dates), "%Y-%m-%d")
head(dates)
str(dates)
hist(dates, "date")
hist(dates, "day")
?mean
?summary
summary(data.act)
?tapply
tapply(data.act, dates, FUN = "mean")
?hist
?hist
?barplot
?boxplot
data.act <- read.csv("activity.csv", header = TRUE, sep =",", quote = "\"", na.strings = "NA")
dates <- data.act$date
dates <- as.Date(as.character(dates), "%Y-%m-%d")
str(data.act)
boxplot(data.act$steps, dates)
boxplot(log10(data.act$steps), log10(dates))
?plot
plot(dates, data.act$steps)
sapply(split(data.act, dates), mean)
sapply(split(data.act$steps, dates), mean)
head(sapply(split(data.act$steps, dates), mean))
act.mean <- sapply(split(data.act$steps, dates), mean)
plot(act.mean, dates)
plot(act.mean$steps, dates)
plot(act.mean$steps, act.mean$date)
class(act.mean)
str(act.mean)
act.mean$dates <- names(act.mean)
head(act.mean)
?melt
install.packages("reshape")
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?melt
class(data.act)
act.mean <- with(data.act, tapply(steps, dates, mean, na.rm = T))
str(act.mean)
head(act.mean)
str(act.mean)
summary(act.mean)
act.steps <- data.fracme(date = names(act.mean), mean = act.mean)
act.steps <- data.frame(date = names(act.mean), mean = act.mean)
dim(act.steps)
head(act.steps)
plot(act.steps$date, act.steps$mean)
install.packages("xtable")
?xtable
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?xtable
xtable(act.steps$date, act.steps$mean)
act.median <- with(data.act, tapply(steps, dates, median, na.rm = T))
str(act.median)
summary(act.median)
head(act.median)
?median
head(act.mean)
tail(act.median)
data.act <- read.csv("activity.csv", header = TRUE, sep =",", quote = "\"", na.strings = "NA")
dates <- data.act$date
dates <- as.Date(as.character(dates), "%Y-%m-%d")
act.mean <- with(data.act, tapply(steps, dates, mean, na.rm = T))
str(act.mean)
summary(act.mean)
act.median <- with(data.act, tapply(steps, dates, median, na.rm = T))
str(act.median)
summary(act.median)
tail(act.median)
data.act <- read.csv("activity.csv", header = TRUE, sep =",", quote = "\"", na.strings = "NA")
dates <- data.act$date
dates <- as.Date(as.character(dates), "%Y-%m-%d")
act.median
dec29 <- subset(data.act, data == "2012-11-29")
dec29 <- subset(data.act, date == "2012-11-29")
dec29
act.steps <- data.frame(date = names(act.mean), mean = act.mean, median = act.median
)
head(act.steps)
?hist
hist(act.steps$mean)
act.sum <- with(data.act, tapply(steps, dates, sum, na.rm = T))
str(act.sum)
summary(act.sum)
act.steps <- data.frame(date = names(act.mean), total = act.sum, mean = act.mean, median = act.median)
hist(act.steps$total)
hist(act.steps$total, width = 100)
?hist
hist(act.steps$total, breaks = 100)
hist(act.steps$total, breaks = 1000)
hist(act.steps$total, breaks = 10000)
hist(act.steps$total, breaks = 10)
plot(act.steps$date, act.steps$mean)
plot(act.steps$date, act.steps$median)
head(data.act)
head(act.sum)
act.perday <- data.frame(date = names(act.mean), steps = act.sum)
head(act.perday)
mean(act.perday$steps)
median(act.perday$steps)
plot(dates, data.act$steps)
hist(act.perday$steps)
hist(act.perday$steps, break = 100)
hist(act.perday$steps, breaks = 100)
hist(act.perday$steps, breaks = 10)
hist(act.perday$steps, breaks = 20)
interval.mean <- with(data.act, tapply(steps, interval, mean, na.rm = T))
head(interval.mean)
data.act <- read.csv("activity.csv", header = TRUE, sep =",", quote = "\"", na.strings = "NA")
dates <- data.act$date
dates <- as.Date(as.character(dates), "%Y-%m-%d")
str(data.act)
plot(dates, data.act$steps)
steps.sum <- with(data.act, tapply(steps, dates, sum, na.rm = T))
str(steps.sum)
summary(steps.sum)
steps.perday <- data.frame(date = names(steps.sum), steps = steps.sum)
hist(steps.perday$steps, breaks = 20)
mean(steps.perday)
median(steps.perday)
mean(steps.perday$steps)
median(steps.perday$steps)
interval.mean <- with(data.act, tapply(steps, interval, mean, na.rm = T))
head(interval.mean)
steps.perint <- data.frame(date = names(interval.mean), steps = interval.mean)
steps.perint <- data.frame(interval = names(interval.mean), steps = interval.mean)
plot(steps.perint$interval, steps.perint$steps)
tail(steps.perint)
?plot
plot(steps.perint$interval, steps.perint$steps, type = "l")
?plot
str(par)
par
par(no.readonly=TRUE)
plot(steps.perint$interval, steps.perint$steps, type = "l")
?plot
plot(steps.perint$interval, steps.perint$steps, type = "p")
plot(steps.perint$interval, steps.perint$steps, type = "l")
plot(head(steps.perint$interval), head(steps.perint$steps), type = "l")
?plot
plot(head(steps.perint$interval), head(steps.perint$steps), type = "b")
library(ggplot2)
qplot(interval, steps, data = steps.perint)
qplot(interval, steps, data = steps.perint, geom = c("point","line"))
qplot(interval, steps, data = steps.perint, geom = "line")
qplot(interval, steps, data = steps.perint, geom = "point")
?time
steps.perint <- data.frame(interval = names(interval.mean), steps = as.numeric(interval.mean))
qplot(interval, steps, data = steps.perint, geom = "point")
qplot(interval, steps, data = steps.perint, geom = "line")
plot(head(steps.perint$interval), head(steps.perint$steps), type = "b")
plot(head(steps.perint$interval), head(steps.perint$steps), type = "l")
steps.perint <- data.frame(interval = as.numeric(names(interval.mean), steps = interval.mean)
steps.perint <- data.frame(interval = as.numeric(names(interval.mean)), steps = interval.mean)
plot(head(steps.perint$interval), head(steps.perint$steps), type = "l")
qplot(interval, steps, data = steps.perint, geom = "line")
max(steps.perint$steps)
?qplot2
?qplot
steps.perint[max(steps.perint$steps)]
steps.perint[steps.perint$steps == max(steps.perint$steps)]
max <- max(steps.perint$steps)
steps.perint[steps.perint$steps == max]
steps.perint[max]
steps.perint[which(steps.perint$steps == max)]
steps.perint[which(,steps.perint$steps == max)]
steps.perint[,which(steps.perint$steps == max)]
steps.perint[which(steps.perint$steps == max),]
summary(data.act)
summary(data.act)$NA's'
summary(data.act)$NA'
summary(data.act)$NA
str(summary(data.act))
dimnames(summary(data.act))
attr(summary(data.act))
str(summary(data.act))
summa <- summary(data.act)
summa
names(summa)
class(summa)
?table
rowNames(summa)
rowName(summa)
rNames(summa)
?count
count(is.na(data.act$steps))
head(is.na(data.act$steps))
sum(is.na(data.act$steps))
head(interval.mean)
intervalmean[5]
intervalmean$5
interval.mean$5
interval.mean[5]
interval.mean["5"]
interval.mean$5
interval.mean$"5"
act.cleaned <- data.act
test <- name(interval.mean[1])
test <- names(interval.mean[1])
interval.mean[test]
?as.Character
?as.character
for (i in 1:length(act.cleaned))
if (is.na(act.cleaned$steps)) {
act.cleaned$steps <- interval.mean[as.character(act.cleaned$interval]
}
for (i in 1:length(act.cleaned)) {}
if (is.na(act.cleaned$steps)) {
act.cleaned$steps <- interval.mean[as.character(act.cleaned$interval]
}
}
for (i in 1:length(act.cleaned)) {
if (is.na(act.cleaned$steps)) {
act.cleaned$steps <- interval.mean[as.character(act.cleaned$interval]
}
}
for (i in 1:length(act.cleaned)) {
if (is.na(act.cleaned$steps)) {
act.cleaned$steps <- interval.mean[as.character(act.cleaned$interval)]
}
}
for (i in 1:length(act.cleaned)) {
if (is.na(act.cleaned$steps[i])) {
act.cleaned[i]$steps <- interval.mean[as.character(act.cleaned[i]$interval)]
}
}
for (i in 1:length(act.cleaned)) {
if (is.na(act.cleaned$steps[i])) {
act.cleaned[i]$steps <- interval.mean[as.character(act.cleaned[i]$interval)]
}
}
head(act.cleaned)
head(interval.mean)
head(data.act)
tail(data.act)
data.act[1000]
data.act[1000,]
act.cleaned[1000,]
for (i in 1:length(act.cleaned)) {
if (is.na(data.act$steps[i])) {
act.cleaned[i]$steps <- interval.mean[as.character(act.cleaned[i]$interval)]
}
}
for (i in 1:length(act.cleaned)) {
if (is.na(data.act[i]$steps)) {
act.cleaned[i]$steps <- interval.mean[as.character(act.cleaned[i]$interval)]
}
}
act.cleaned[1]$steps <- interval.mean[as.character(act.cleaned[1]$interval)]
act.cleaned[1]$steps <- interval.mean[as.character(act.cleaned[1]$interval),]
act.cleaned[1]$steps <- interval.mean[,as.character(act.cleaned[1]$interval)]
for (i in 1:length(data.act)) {
if (is.na(data.act$steps[i])) {
act.cleaned$steps[i] <- interval.mean[as.character(act.cleaned$interval[i])]
}
}
tail(data.act)
tail(act.cleaned)
tail(interval.mean)
data.act[1000]
data.act[1000,]
act.cleaned[1000,]
interval.mean["1115"]
data.act[1001,]
data.act[1000:1020,]
data.act[1009,]
act.cleaned[1009,]
isis.na(data.act$steps[1])
is.na(data.act$steps[1])
is.na(data.act$steps[1009])
library(ggplot2)
data.act <- read.csv("activity.csv", header = TRUE, sep =",", quote = "\"", na.strings = "NA")
interval.mean <- with(data.act, tapply(steps, interval, mean, na.rm = T))
head(interval.mean)
steps.perint <- data.frame(interval = as.numeric(names(interval.mean)), steps = interval.mean)
for (i in 1:length(data.act)) {
if (is.na(data.act$steps[i])) {
act.cleaned$steps[i] <- interval.mean[as.character(data.act$interval[i])]
}
}
act.cleaned <- data.act
for (i in 1:length(data.act)) {
if (is.na(data.act$steps[i])) {
act.cleaned$steps[i] <- interval.mean[as.character(data.act$interval[i])]
}
}
data.act[1009]
data.act[1009,]
act.cleaned[1009,]
data.act[1000:1009,]
act.cleaned[1000:1009,]
tail(data.act)
tail(act.cleaned)
tail(interval.mean)
is.na(data.act$steps[17568])
data.act$interval[17568]
interval.mean["15768"]
interval.mean["2355"]
act.cleaned$steps[15768] <- interval.mean["2355"]
act.cleaned$steps[15768]
head(act.cleaned)
is.na(data.act$steps[4])
for (i in 1:length(data.act)) {
if (is.na(data.act$steps[i])) {
act.cleaned$steps[i] <- interval.mean[as.character(data.act$interval[i])]
}
}
is.na(data.act$steps[4])
head(act.cleaned)
length(data.act)
nrow(data.act)
for (i in 1:nrow(data.act)) {
if (is.na(data.act$steps[i])) {
act.cleaned$steps[i] <- interval.mean[as.character(data.act$interval[i])]
}
}
steps.sumcleaned <- with(act.cleaned, tapply(steps, date, sum, na.rm = T))
steps.perdaycleaned <- data.frame(date = names(steps.sumcleaned), steps = steps.sumcleaned)
hist(steps.perdaycleaned$steps, breaks = 20)
mean(steps.perdaycleaned$steps)
median(steps.perdaycleaned$steps)
?striptime
?strptime
strptime(dates[1], format = "%w")
dates <- data.act$date
dates <- as.Date(as.character(dates), "%Y-%m-%d")
strptime(dates[1], format = "%w")
attr(dates[1])
attr(dates[1],tz)
?attr
dayofweek <- weekdays(dates)
daytype <- if (dayofweek == "Saturday" | dayofweek == "Sunday") "weekend" else "weekday"
head(daytype)
`?with
?with
head(dayofweek)
daytype <- with(dayofweek, if (dayofweek == "Saturday" | dayofweek == "Sunday") "weekend" else "weekday")
class(dayofweek)
length(dayofweek)
daytype <- for (i in 1:length(dayofweek)) { if (dayofweek[i] == "Saturday" | dayofweek[i] == "Sunday") "weekend" else "weekday" }
for (i in 1:length(dayofweek)) { daytype[i] <- if (dayofweek[i] == "Saturday" | dayofweek[i] == "Sunday") "weekend" else "weekday" }
?as.character
?as.?factor
?as.factor
daytype = as.factor()
daytype = as.factor(daytype)
for (i in 1:length(dayofweek)) {
daytype[i] <- if (dayofweek[i] == "Saturday" | dayofweek[i] == "Sunday") "weekend" else "weekday"
}
?subset
data.weekday <- subset (data.cleaned, daytype == "weekday")
data.weekday <- subset (act.cleaned, daytype == "weekday")
data.weekend <- subset (act.cleaned, daytype == "weekend")
head(data.weekday)
head(data.weekend)
interval.mean.day <- with(data.weekday, tapply(steps, interval, mean))
steps.perint.day <- data.frame(interval = as.numeric(names(interval.mean.day)), steps = interval.mean.day)
interval.mean.end <- with(data.weekend, tapply(steps, interval, mean))
steps.perint.end <- data.frame(interval = as.numeric(names(interval.mean.end)), steps = interval.mean.end)
install.packages("gridExtra")
library("gridExtra", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?knit2html
?knit
library(knitr)
?knit
?knit2html
knit2html("PA1_template.Rmd")
?hist
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
library(ggplot2)
?qplot
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y ~ x)
fit <- lm(y ~ x)
fit
fit$coeff
summary(fit)
summary(fit)$sigma
data(mtcars)
str(mtcars)
fit <- lm(mtcars$mpg ~ mtcars$wt)
summary(fit)
mean(mtcars$wt)
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1,1) * qt(.975, df = fit$df) * sumCoef[2,2]
?mtcars
help(mtcars)
head(mtcars$wt)
predict(fit, 3, interval = ("confidence"))
predict(fit, c(3), interval = ("confidence"))
?predict
predict(fit, data.frame(3), interval = ("confidence"))
?predict
predict(fit, interval = ("confidence"))
predict(fit, interval = ("predict"))
predict(fit, interval = ("prediction"))
predict(fit, 3, interval = ("prediction"))
predict(fit, interval = ("prediction"))
predict(fit, 3, interval = ("prediction"))
predict(fit, data.frame(3), interval = ("prediction"))
mtcars$wt
summary(fit)
summary(fit)$coefficients[1,2]
summary(fit)$coefficients[2,1] * 3 + summary(fit)$coefficients[1,1]
summary(fit)$coefficients[2,1] * mean(mtcars$wt) + summary(fit)$coefficients[1,1]
lm(mtcars$mpg ~ offset(mtcars$wt)
)
summary(fit)
